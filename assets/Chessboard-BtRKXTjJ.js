import{a,L as u,N as h,g as _,Q as d,O as p,E as v,x as c,T as g,U as w,V as b,I as f,r as C,n as l,b as S,t as q}from"./index-DxQFnZx7.js";import{C as M}from"./chessground-doaUGlzw.js";class m{static init=()=>new m;get position(){return this._position[0]()}set position(e){this._position[1](e)}get turnColor(){return this.m_color()}get promotion(){return this._promotion[0]()}set promotion(e){this._promotion[1](e)}get add_uci(){return this._add_uci[0]()}set add_uci(e){this._add_uci[1](e)}get last_move(){return this._last_move[0]()}set last_move(e){this._last_move[1](e)}_add_uci;_promotion;_position;m_fen;m_dests;m_color;_last_move;constructor(){this._on_wheel=a(void 0,{equals:!1}),this._last_move=a(void 0,{equals:!1}),this._add_uci=a(void 0,{equals:!1}),this._promotion=a(void 0,{equals:!1}),this._position=a(u.fromSetup(h(f).unwrap()).unwrap(),{equals:!1}),this.m_dests=_(()=>d(this.position)),this.m_fen=_(()=>p(this.position.toSetup())),this.m_color=_(()=>this.position.turn)}_on_wheel;set_on_wheel=e=>{this._on_wheel[1](e)};get on_wheel(){return this._on_wheel[0]()}on_play_uci=e=>{let t=v(this.fen,e);this.on_set_fen_uci(t,e)};on_set_fen_uci=(e,t)=>{c(()=>{this.add_uci=void 0,this.last_move=t,this.position=u.fromSetup(h(e).unwrap()).unwrap()})};reset_move_after=()=>{this.position=this.position};on_move_after=(e,t)=>{let s=this.position.board.get(g(e)),o=e+t;s.role==="pawn"&&(t[1]==="8"&&this.turnColor==="white"||t[1]==="1"&&this.turnColor==="black")&&(o+="q");let n=w(o),r=b(this.position,n);this.position.play(n),c(()=>{this.last_move=o,this.position=this.position,o.length===5&&(this.promotion=t),this.add_uci=[o,r]})};get fen_uci(){let e=this.fen,t=this.last_move;return[e,t]}get fen(){return this.m_fen()}get dests(){return this.m_dests()}}var k=q('<div class="is2d chessboard">');const I=i=>{let e,t;return C(()=>{let s=i.color,o=i.dests,n={premovable:{enabled:!1},movable:{color:s,free:!1,dests:o,events:{after:i.onMoveAfter}}};t=M(e,n)}),l(()=>{let s,o;i.fen_uci?[s,o]=i.fen_uci:s=f;let n=[];o&&(n.push(o.slice(0,2)),n.push(o.slice(2,4)));let r=i.movable?i.color:void 0;t.set({fen:s,lastMove:n,turnColor:i.color,movable:{color:r,dests:i.dests}})}),l(()=>{let s=i.orientation??"white";t.set({orientation:s})}),l(()=>{let s=i.doPromotion;if(s){let o=t.state.pieces.get(s);t.setPieces(new Map([[s,{color:o.color,role:"queen",promoted:!0}]]))}}),l(()=>{i.shapes?t.setAutoShapes(i.shapes):t.setAutoShapes([])}),(()=>{var s=k();return S(o=>e=o,s),s})()};export{I as C,m as S};
